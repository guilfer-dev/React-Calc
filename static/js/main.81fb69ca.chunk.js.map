{"version":3,"sources":["helpers/replaceChar.js","App.js","index.js"],"names":["replaceChar","char","App","useState","display","setDisplay","firstNumber","setFirstNumber","operation","setOperation","error","setError","useEffect","isNaN","setTimeout","result","secondNumber","operatorator","operators","a","b","Number","toExponential","toFixed","opCondition","op","console","log","id","className","map","i","onClick","e","join","target","length","prev","temp","pop","innerHTML","includes","handleInput","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAAe,SAASA,EAAYC,GAChC,OAAQA,GACJ,IAAK,YACD,MAAO,2BAEX,IAAK,KACD,MAAO,OAEX,IAAK,IACD,MAAO,QAEX,IAAK,IACD,MAAO,SAEX,IAAK,IACD,MAAO,QAEX,IAAK,IACD,MAAO,QAEX,IAAK,IACD,MAAO,QAEX,KAAK,EACD,MAAO,UAEX,IAAK,IACD,MAAO,QAEX,QACI,MAAO,U,iBCsJJC,MA/Kf,WAEI,MAA8BC,mBAAS,CAAC,IAAxC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACFC,MAAMP,KACNK,EAAS,SACTJ,EAAe,GACfO,YAAW,WACPH,EAAS,MACV,QAGR,CAACL,IAEJ,IAuFMS,EAAS,SAACT,EAAaU,GAA4C,IAA9BC,EAA6B,uDAAdT,EAEtD,GAAoB,IAAhBF,GAAsC,IAAjBU,EAAoB,CACzC,IAAME,EAAY,CACd,IAAK,SAAUC,EAAGC,GAAK,OAAOD,EAAIC,GAClC,IAAK,SAAUD,EAAGC,GAAK,OAAOD,EAAIC,GAClC,IAAK,SAAUD,EAAGC,GAAK,OAAOD,EAAIC,GAClC,IAAK,SAAUD,EAAGC,GAAK,OAAOD,EAAIC,GAClC,GAAI,cAGJL,EAASG,EAAUD,GAAcI,OAAOf,GAAcU,GAEtDD,EAAS,UACTA,EAASA,EAAOO,cAAc,GAC9Bf,EAAeQ,IAGfR,EAFQQ,EAAS,KAAW,MAAYA,EAAS,EAElCA,EAAOQ,QAAQ,GAEfR,GAGnBV,EAAW,CAAC,MAKdmB,EAAc,SAACC,EAAIT,GAErBU,QAAQC,IAAIF,GAEM,KAAdjB,GAAoBA,IAAciB,IAClCV,EAAOT,EAAaU,GACpBP,EAAagB,GACbV,EAAOT,EAAaU,EAAcS,IAEpB,KAAdjB,GAAoC,IAAhBF,GACpBC,EAAeS,GACfP,EAAagB,GACbpB,EAAW,CAAC,KAEZU,EAAOT,EAAaU,IAI5B,OACI,sBAAKY,GAAG,OAAR,UACI,sBAAKC,UAAS,kBAAanB,GAA3B,UACI,sBAAKmB,UAAU,cAAf,mBAAoCvB,EAAaE,KACjD,oCAAOJ,QAGX,qBAAKyB,UAAU,WAAf,SAGQ,CAAC,KAAM,YACD,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,IAAK,KAAKC,KAAI,SAAAC,GAAC,OAC/D,wBAAiBF,UAAW7B,EAAY+B,GAAIC,QAAS,SAAAC,GAAC,OAjJ1D,SAACA,GAEjB,IAAMjB,EAAeK,OAAOjB,EAAQ8B,KAAK,KAEzC,OAAQD,EAAEE,OAAON,WACb,IAAK,OACDxB,EAAW,CAAC,IACZE,EAAe,GACfE,EAAa,IACb,MACJ,IAAK,2BACGL,EAAQgC,OAAS,EACjB/B,GAAW,SAAAgC,GACP,IAAMC,EAAI,YAAOD,GAEjB,OADAC,EAAKC,MACED,KAGXjC,EAAW,CAAC,IAEhB,MACJ,IAAK,SACkB,IAAfD,EAAQ,IACO,MAAfA,EAAQ,IACO,MAAfA,EAAQ,IACO,MAAfA,EAAQ,IAERC,GAAW,SAAAgC,GACP,IAAMC,EAAI,YAAOD,GAIjB,MAHgB,MAAZC,EAAK,IAA0B,MAAZA,EAAK,IACxBA,EAAKC,MAEFD,KAIXlC,EAAQgC,OAAS,GACjB/B,GAAW,SAAAgC,GAAI,4BAAQA,GAAR,CAAcJ,EAAEE,OAAOK,eAE1C,MAEJ,IAAK,WACmB,IAAfpC,EAAQ,IAAYA,EAAQqC,SAAS,OACtCrC,EAAQgC,OAAS,GACjB/B,GAAW,SAAAgC,GAAI,4BAAQA,GAAR,CAAc,SAEjC,MAEJ,IAAK,SACIjC,EAAQqC,SAAS,MAAQrC,EAAQgC,OAAS,GAC3C/B,GAAW,SAAAgC,GAAI,4BAAQA,GAAR,CAAc,SAEjC,MAGJ,IAAK,QACDb,EAAY,IAAKR,GACjB,MAEJ,IAAK,SACDQ,EAAY,IAAKR,GACjB,MAEJ,IAAK,QACkB,IAAfZ,EAAQ,IAA4B,IAAhBE,EACpBD,EAAW,CAAC,MAEZmB,EAAY,IAAKR,GAErB,MAEJ,IAAK,QACDQ,EAAY,IAAKR,GACjB,MAEJ,IAAK,QACDD,EAAOT,EAAaU,GACpBP,EAAa,KAoEyDiC,CAAYT,IAAtE,SACEF,GADYA,Y,MCnK1CY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.81fb69ca.chunk.js","sourcesContent":["export default function replaceChar(char) {\r\n    switch (char) {\r\n        case 'backspace':\r\n            return \"backspace material-icons\";\r\n\r\n        case 'CE':\r\n            return \"fnCe\";\r\n\r\n        case '/':\r\n            return \"opDiv\";\r\n\r\n        case '*':\r\n            return \"opMult\";\r\n\r\n        case '-':\r\n            return \"opSub\";\r\n\r\n        case '+':\r\n            return \"opSum\";\r\n\r\n        case ',':\r\n            return \"opDec\";\r\n\r\n        case 0:\r\n            return \"numZero\";\r\n\r\n        case '=':\r\n            return \"fnRes\";\r\n\r\n        default:\r\n            return 'numKey'\r\n    }\r\n}","import { useState, useEffect } from \"react\";\r\nimport replaceChar from \"./helpers/replaceChar\";\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n    const [display, setDisplay] = useState([0]);\r\n    const [firstNumber, setFirstNumber] = useState(0);\r\n    const [operation, setOperation] = useState('');\r\n    const [error, setError] = useState('')\r\n\r\n    useEffect(() => {\r\n        if (isNaN(firstNumber)) {\r\n            setError('error');\r\n            setFirstNumber(0);\r\n            setTimeout(() => {\r\n                setError('');\r\n            }, 1000);\r\n        }\r\n\r\n    }, [firstNumber])\r\n\r\n    const handleInput = (e) => {\r\n\r\n        const secondNumber = Number(display.join(''));\r\n\r\n        switch (e.target.className) {\r\n            case 'fnCe':\r\n                setDisplay([0]);\r\n                setFirstNumber(0);\r\n                setOperation('');\r\n                break;\r\n            case 'backspace material-icons':\r\n                if (display.length > 1) {\r\n                    setDisplay(prev => {\r\n                        const temp = [...prev];\r\n                        temp.pop();\r\n                        return temp;\r\n                    })\r\n                } else {\r\n                    setDisplay([0]);\r\n                }\r\n                break;\r\n            case 'numKey':\r\n                if (display[0] === 0 ||\r\n                    display[0] === '/' ||\r\n                    display[0] === '*' ||\r\n                    display[0] === '+'\r\n                ) {\r\n                    setDisplay(prev => {\r\n                        const temp = [...prev];\r\n                        if (temp[1] !== '.' || temp[0] !== '-') {\r\n                            temp.pop();\r\n                        }\r\n                        return temp;\r\n                    });\r\n                }\r\n\r\n                if (display.length < 9) {\r\n                    setDisplay(prev => [...prev, e.target.innerHTML]);\r\n                }\r\n                break;\r\n\r\n            case 'numZero':\r\n                if ((display[0] !== 0 || display.includes('.')) &&\r\n                    display.length < 9) {\r\n                    setDisplay(prev => [...prev, '0']);\r\n                }\r\n                break;\r\n\r\n            case 'opDec':\r\n                if (!display.includes('.') && display.length < 9) {\r\n                    setDisplay(prev => [...prev, '.']);\r\n                }\r\n                break;\r\n\r\n\r\n            case 'opDiv':\r\n                opCondition('/', secondNumber)\r\n                break;\r\n\r\n            case 'opMult':\r\n                opCondition('*', secondNumber)\r\n                break;\r\n\r\n            case 'opSub':\r\n                if (display[0] === 0 && firstNumber === 0) {\r\n                    setDisplay(['-'])\r\n                } else {\r\n                    opCondition('-', secondNumber)\r\n                }\r\n                break;\r\n\r\n            case 'opSum':\r\n                opCondition('+', secondNumber)\r\n                break;\r\n\r\n            case 'fnRes':\r\n                result(firstNumber, secondNumber);\r\n                setOperation('');\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        return;\r\n\r\n    }\r\n\r\n    const result = (firstNumber, secondNumber, operatorator = operation) => {\r\n\r\n        if (firstNumber !== 0 && secondNumber !== 0) {\r\n            const operators = {\r\n                '/': function (a, b) { return a / b },\r\n                '*': function (a, b) { return a * b },\r\n                '-': function (a, b) { return a - b },\r\n                '+': function (a, b) { return a + b },\r\n                '': () => { }\r\n            };\r\n\r\n            let result = operators[operatorator](Number(firstNumber), secondNumber);\r\n\r\n            if (result > 99999999) {\r\n                result = result.toExponential(7);\r\n                setFirstNumber(result);\r\n            } else if ((result % 0.00001) < 0.000009 && result > 0) {\r\n\r\n                setFirstNumber(result.toFixed(7));\r\n            } else {\r\n                setFirstNumber(result);\r\n            }\r\n\r\n            setDisplay([0]);\r\n        }\r\n\r\n    }\r\n\r\n    const opCondition = (op, secondNumber) => {\r\n\r\n        console.log(op);\r\n\r\n        if (operation !== '' || operation !== op) {\r\n            result(firstNumber, secondNumber);\r\n            setOperation(op);\r\n            result(firstNumber, secondNumber, op);\r\n        }\r\n        if (operation === '' && firstNumber === 0) {\r\n            setFirstNumber(secondNumber);\r\n            setOperation(op);\r\n            setDisplay([0]);\r\n        } else {\r\n            result(firstNumber, secondNumber)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"calc\">\r\n            <div className={`display ${error}`}>\r\n                <div className=\"firstNumber\"> ans: {firstNumber}{operation}</div>\r\n                <div> {display}</div>\r\n            </div>\r\n\r\n            <div className=\"keyboard\">\r\n\r\n                {\r\n                    ['CE', 'backspace'\r\n                        , 9, 8, 7, '/', 6, 5, 4, '*', 3, 2, 1, '-', 0, ',', '+', '='].map(i =>\r\n                            < button key={i} className={replaceChar(i)} onClick={e => handleInput(e)}\r\n                            >{i}\r\n                            </button>\r\n                        )\r\n                }\r\n\r\n            </div>\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}